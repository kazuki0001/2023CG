<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <title>sample1</title>

  <!-- three.jsを読み込む(ローカル) -->
  <!-- <script src="./three.js"></script> -->
  <!-- three.jsを読み込む(CDN) -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/99/three.min.js"></script>

</head>
<body>
 <script>
  var init = function() {

    var width = 800,
        height = 600;

    // レンダラーを作成
    var renderer = new THREE.WebGLRenderer();
    renderer.setSize(width, height);
    renderer.shadowMap.enabled = true;
    document.body.appendChild(renderer.domElement);

    // シーンを作成
    var scene = new THREE.Scene();

    // カメラを作成
    var camera = new THREE.PerspectiveCamera(45, width / height, 1, 1000);
	// 照明を作成
	const light = new THREE.SpotLight(0xFFFFFF, 2, 100, Math.PI / 4, 1);
	// ライトに影を有効にする
	light.castShadow = true;
	scene.add(light);
	// 床を作成
	const meshFloor = new THREE.Mesh(
	  new THREE.BoxGeometry(2000, 0.1, 2000),
	  new THREE.MeshStandardMaterial());
	// 影を受け付ける
	meshFloor.receiveShadow = true;
	scene.add(meshFloor);

    // 箱を作成
    var geometry = new THREE.BoxGeometry(1, 1, 1);
    var material = new THREE.MeshPhongMaterial({ color: 0x0000ff });
    var box = new THREE.Mesh(geometry, material);
    box.position.z = -5;
    meshKnot.castShadow = true;
    scene.add(box);
	var cylinderGeometry = new THREE.CylinderGeometry( 0.3, 0.5, 1, 8 );
    var cylinderMaterial = new THREE.MeshPhongMaterial( {color: 0x0000ff} );
	var cylinder = new THREE.Mesh( cylinderGeometry, cylinderMaterial );
	cylinder.position.set( 0, 0, -5 );
	scene.add( cylinder );
    // 平行光源1
    var directionalLight1 = new THREE.DirectionalLight(0xffffff);
    directionalLight1.position.set(1, 1, 1);
    // シーンに追加
    scene.add(directionalLight1);
    // 平行光源2
        var directionalLight2 = new THREE.DirectionalLight(0xffffff);
    directionalLight2.position.set(-1, 1, 1);
    // シーンに追加
    scene.add(directionalLight2);

    // 初回実行
    var update = function() {
      requestAnimationFrame(update);

      // 箱を回転させる
      box.rotation.x += 0.01;
      box.rotation.y += 0.01;

      renderer.render(scene, camera);
    };
    update();
  }
  window.addEventListener('DOMContentLoaded', init);
</script>
</body>
</html>
